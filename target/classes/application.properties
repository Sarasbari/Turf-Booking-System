# Server Configuration
server.port=8080
server.servlet.context-path=/
server.error.include-message=always
server.error.include-binding-errors=always

# Database Configuration - MySQL (Production) - Commented out for testing
#spring.datasource.url=jdbc:mysql://localhost:3306/turfbooking?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC
#spring.datasource.username=root
#spring.datasource.password=7906
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Database Configuration - H2 (Development/Testing) - Using this for local testing
spring.datasource.url=jdbc:h2:mem:turfbookingdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# Initialize database with data.sql
spring.sql.init.mode=always
spring.sql.init.data-locations=classpath:schema.sql,classpath:data.sql
spring.sql.init.continue-on-error=false

# Google OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=1295838934-v5qhs492q5f1gnj61nbkv4o7da582gk0.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v2/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=email

# Session Configuration
server.servlet.session.timeout=30m
spring.session.store-type=jdbc
spring.session.jdbc.initialize-schema=always

# Logging Configuration
logging.level.com.turfbooking=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Static Resources
spring.web.resources.static-locations=classpath:/static/,file:./frontend/
spring.mvc.static-path-pattern=/static/**

# JSON Configuration
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.serialization.write-date-timestamps-as-nanoseconds=false
spring.jackson.deserialization.fail-on-unknown-properties=false

# File Upload Configuration
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB

# Application Configuration
app.base-url=http://localhost:8080
app.frontend-url=http://localhost:8080
app.allow-self-promotion=true